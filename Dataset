# ðŸ§ª Dataset: Synthetic Data for Decision Boundary Visualization

This synthetic dataset is designed to visually compare the classification capabilities of Logistic Regression and a Neural Network (MLP Classifier). The data contains complex, non-linear patterns to highlight the strengths of deep learning models over traditional linear ones.

## ðŸŽ¯ Purpose

- To demonstrate how decision boundaries differ between linear and non-linear classifiers.
- To create a diverse set of data points using mathematical patterns and controlled randomness.

## ðŸ“Š Features

- `X`: Randomly distributed input feature with Gaussian noise
- `Y`: Complex quadratic patterns with added noise
- `class`: Binary labels (0 or 1)

## ðŸ§¬ Dataset Generation Code

```python
samples = 1000

# Generate X values
X = np.random.normal(0, 3, int(samples/2))

# Generate Y values with a quadratic pattern and noise
y = list(X[:int(samples/4)]**2 + np.random.normal(-40, 10, int(samples/4))) + \
    list(-X[int(samples/4):]**2 + np.random.normal(40, 10, int(samples/4)))

# Generate second set of X values
X2 = 4 * np.random.random(int(samples/8)) - 2 + np.random.normal(0.1, 1, int(samples/8))
Y2 = 10 * np.random.random(int(samples/8)) - 6 + np.random.normal(0, 1, int(samples/8))

# Generate third set of X values
X3 = np.random.normal(0, 3, int(3 * samples / 8))

# Generate Y3 values with a quadratic pattern and noise
y3 = list(X3[:int(samples/8)]**2 + np.random.normal(-80, 10, int(samples/8))) + \
     list(-X3[int(samples/8):]**2 + np.random.normal(80, 10, int(2 * samples/8)))

# Combine data points
Xs = list(X) + list(X2) + list(X3)
ys = list(y) + list(Y2) + list(y3)

# Create labels
labels = [0 for i in range(int(samples/2))] + [1 for i in range(int(samples/2))]

# Create DataFrame
df = pd.DataFrame({'X': Xs, 'Y': ys, 'class': labels})

# Display sample data
print(df.sample(5))



The dataset generated by this code simulates complex, non-linear relationships between features and class labels. 
The overlapping distributions and quadratic patterns make it challenging for simple linear models, 
allowing us to effectively visualize the differences in decision boundaries when using Logistic Regression 
versus an MLP Classifier.

This dataset is ideal for understanding how neural networks can capture intricate patterns compared to 
traditional linear classifiers, making it a useful tool for both learning and demonstration purposes.

Feel free to adjust the number of samples or noise parameters to explore different levels of complexity 
in the classification task.
